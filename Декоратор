using System;
namespace CafeOrderSystem
{
    public abstract class Beverage
    {
        public abstract string Description { get; }
        public abstract double Cost();
    }

    public class Espresso : Beverage
    {
        public override string Description => "Espresso";

        public override double Cost()
        {
            return 450;
        }
    }

    public class Tea : Beverage
    {
        public override string Description => "Tea";

        public override double Cost()
        {
            return 300;
        }
    }

    public class Latte : Beverage
    {
        public override string Description => "Latte";

        public override double Cost()
        {
            return 400;
        }
    }

    public class Mocha : Beverage
    {
        public override string Description => "Mocha";

        public override double Cost()
        {
            return 450;
        }
    }

    public abstract class BeverageDecorator : Beverage
    {
        protected Beverage beverage;

        public BeverageDecorator(Beverage beverage)
        {
            this.beverage = beverage;
        }

        public override string Description => beverage.Description;

        public override double Cost()
        {
            return beverage.Cost();
        }
    }

    public class Milk : BeverageDecorator
    {
        public Milk(Beverage beverage) : base(beverage) { }

        public override string Description => beverage.Description + ", Milk";

        public override double Cost()
        {
            return beverage.Cost() + 150;
        }
    }

    public class Sugar : BeverageDecorator
    {
        public Sugar(Beverage beverage) : base(beverage) { }

        public override string Description => beverage.Description + ", Sugar";

        public override double Cost()
        {
            return beverage.Cost() + 170;
        }
    }

    public class WhippedCream : BeverageDecorator
    {
        public WhippedCream(Beverage beverage) : base(beverage) { }

        public override string Description => beverage.Description + ", Whipped Cream";

        public override double Cost()
        {
            return beverage.Cost() + 180;
        }
    }

    public class Syrup : BeverageDecorator
    {
        public Syrup(Beverage beverage) : base(beverage) { }

        public override string Description => beverage.Description + ", Syrup";

        public override double Cost()
        {
            return beverage.Cost() + 150;
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            Beverage beverage = new Espresso();
            Console.WriteLine($"{beverage.Description}: {beverage.Cost()} tg");

            beverage = new Milk(beverage);
            Console.WriteLine($"{beverage.Description}: {beverage.Cost()} tg");

            beverage = new Sugar(beverage);
            Console.WriteLine($"{beverage.Description}: {beverage.Cost()} tg");

            beverage = new WhippedCream(beverage);
            Console.WriteLine($"{beverage.Description}: {beverage.Cost()} tg");

            Beverage anotherBeverage = new Latte();
            anotherBeverage = new Syrup(anotherBeverage);
            anotherBeverage = new Milk(anotherBeverage);

            Console.WriteLine($"{anotherBeverage.Description}: {anotherBeverage.Cost()} тг");

            Console.ReadLine();
        }
    }
}
